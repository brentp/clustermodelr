\documentclass{article}

% \VignetteIndexEntry{clustermodelr Example}

\begin{document}
\SweaveOpts{concordance=TRUE}

\title{clustermodelr package example}
\author{Brent S Pedersen}
\maketitle

clustermodelr is meant to provide a consistent interface to a number of methods that are
designed to model correlated data.

\section{Correlated Data}

To demonstrate it's use, we can first create some correlated data. Below
we generate 20 cases and 20 controls each with 4 correlated probes.
We make a set of cases with a \textbf{slightly} different value than the
controls.

<<gencor>>=
library(clustermodelr)
set.seed(11)

cases = gen.correlated(0.23, 20, 4, mean=0.025, sd=0.035)
controls = gen.correlated(0.23, 20, 4, mean=0.0, sd=0.035)
meth = rbind(cases, controls)
colnames(meth) = paste0("probe_", 1:4)

covs = data.frame(case=c(rep(1, 20), rep(0, 20)))
rownames(meth) = rownames(covs) = paste0("sample_", 1:40)
head(covs)

head(meth)
@

\subsubsection*{Test Correlation}
We created the samples with a correlation of 0.23, we can check this:
<<cor>>=
unlist(lapply(1:3, function(i) cor(meth[,i], meth[,i + 1])))
@

\subsubsection*{Naive Test}
Now we have 40 samples, each with 4 probes. We created a small
difference. If we try a t.test on a single probe:
<<t.test>>=
t.test(meth[,1] ~ covs$case)
@

We don't see a difference. 


\subsection*{Clustered Tests}
We can test the entire 4-probe region as a unit. All
of the functions assume that a formula argument will have \emph{methylation} as
the LHS. It will be handled internally how that is tested, but here, we wish
to test the association of the methylation with the case status that we have entered
in the \emph{covs} data.frame. The conventions is that \textbf{the first covariate on the RHS of the formula will be the one of interest}. The p-value and coefficient
will be returned for that covariate.

\subsubsection*{Stouffer Liptak}
<<liptak>>=
combiner(covs, meth, methylation ~ case)
@
This utilizes the information across the 4 probes to determine the significance and
size of the association. Here we see that the p-value is quite low, especially when compared with the value from the single-probe t-test.

\subsubsection*{Bumping Method}
We can also test with other methods. The \emph{bumpingr} method generates null data
by shuffling the residuals of the null model, adding them to the predictions, and
testing the fitted covariate of that dataset against the real dataset. As such,
it takes longer to run:

<<bumping>>=
#bumpingr(covs, meth, methylation ~ case)
@

The remaining methods take the data in long format where \emph{methylation}
is assumed to be a column present in the \emph{covs} data.frame. And that
the \emph{covs} data.frame is expanded such that we have a set of rows for
each methylation measurement. In this case, since we had a total of 40 samples
and 4 probes, the long covariates matrix will have 4 * 40 rows.

\subsection*{Long-Form Methods}
<<longer>>=
covs.long = expand.covs(covs, meth)
head(covs.long)
dim(covs.long)
@
Note that there has been an \emph{id} and a \emph{CpG} column added. Even though
this package isn't specific to methylation data, we use these terms. The \emph{CpG}
column gives the integer column number from the original data and the \emph{id}
column gives the integer row numbers. These let us track the \emph{repeated-measures}
that we get by combining the data in this way.
\subsubsection*{Mixed-Model}
Now we can test our methylation using the long methods. First using mixed-effect
models with lme4 syntax.

<<mixed_model>>=
mixed_modelr(covs.long, methylation ~ case + (1|id))
mixed_modelr(covs.long, methylation ~ case + (1|id) + (1|CpG))
@

\subsubsection*{GEE}
Or we can use GEE's via \emph{geepack}
<<gee>>=
geer(covs.long, methylation ~ case, corstr="ar", idvar="id")

geer(covs.long[order(covs.long$CpG, covs.long$id),],
     methylation ~ case, corstr="ex", idvar="CpG")
@

Note that for GEE with \emph{autoregressive} the order of
the entries is important.

\section*{Conclusions}
Note that each of the methods has given a very similar coefficient for the
difference but each had a different p-value.

For further use of this module, see: https://github.com/brentp/clustermodel/


\end{document}
